// AUTO-GENERATED by scripts/consolidate-tests.js
// Consolidated tests for source: components\blocks\Token

import { describe, it, expect } from 'vitest'
import { mount } from '@vue/test-utils'
import Token from '/src/components/blocks/Token.vue'


// from: test\blocks\token_space.spec.ts
(() => {

describe('Token rendering branches', () => {
  it('renders non-breaking space for token text equal to single space', () => {
    const token = { type: 'token', start: 1, end: 2, text: ' ' }
    const wrapper = mount(Token as any, { props: { token } })
    // Text should contain the literal '&nbsp;'
    expect(wrapper.html()).toContain('&nbsp;')
  })
})

})();

// from: test\components\Token.spec.ts
(() => {

describe('Token component', () => {
  it('renders token text', () => {
    const wrapper = mount(Token as unknown as Record<string, unknown>, { props: { token: { type: 'token', start: 1, text: 'a' } } })
    expect(wrapper.text()).toContain('a')
  })
})

})();

