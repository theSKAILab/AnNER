// AUTO-GENERATED by scripts/consolidate-tests.js
// Consolidated tests for source: components\dialogs\OpenDialog

import { shallowMount } from '@vue/test-utils'
import OpenDialog from '/src/components/dialogs/OpenDialog.vue'
import { describe, it, expect } from 'vitest'
import { mount } from '@vue/test-utils'
import ExitDialog from '/src/components/dialogs/ExitDialog.vue'


// from: test\components\OpenDialog.spec.ts
(() => {

describe('OpenDialog', () => {
  it('re-emits hide when q-dialog hides and emits confirm when OK clicked', async () => {
    const wrapper = shallowMount(OpenDialog, {
      props: { show: true },
      global: {
        stubs: {
          'q-dialog': { template: '<div><slot /></div>' },
          'q-card': { template: '<div><slot /></div>' },
          'q-card-section': { template: '<div><slot /></div>' },
          'q-card-actions': { template: '<div><slot /></div>' },
          'q-btn': { template: '<button @click="$emit(\'click\')"></button>' },
        },
      },
    })

    const buttons = wrapper.findAll('button')
    expect(buttons.length).toBeGreaterThanOrEqual(2)
    await buttons[0].trigger('click')
    expect(wrapper.emitted()).toHaveProperty('hide')
    await buttons[1].trigger('click')
    expect(wrapper.emitted()).toHaveProperty('confirm')
  })
})

})();

// from: test\components\OpenExitDialog.spec.ts
(() => {

describe('Open/Exit Dialogs', () => {
  it('OpenDialog shows confirmation text and emits confirm', async () => {
    const wrapper = mount(OpenDialog as unknown as Record<string, unknown>, { props: { show: true } })
    expect(wrapper.text()).toContain('Are you sure you want to open a new file?')
    await wrapper.findAll('q-btn').at(1)?.trigger('click')
  })

  it('ExitDialog shows confirmation text and emits confirm', async () => {
    const wrapper = mount(ExitDialog as unknown as Record<string, unknown>, { props: { show: true } })
    expect(wrapper.text()).toContain('Are you sure you want to close this file?')
    await wrapper.findAll('q-btn').at(1)?.trigger('click')
  })
})

})();

